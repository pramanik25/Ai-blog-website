# .github/workflows/daily_content_job.yml

name: Daily Content Generation

# This defines when the job will run.
on:
  schedule:
    # This is a CRON string that means "run at 01:00 UTC every day".
    # You can adjust the time. 0 1 * * * means 1 AM UTC.
    - cron: '0 1 * * *'
  # This also allows you to run the job manually from the GitHub Actions tab.
  workflow_dispatch:

jobs:
  build-and-run-script:
    # Run the job on the latest version of Ubuntu.
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out your repository's code.
    - name: Check out repository
      uses: actions/checkout@v3

    # Step 2: Set up a Python environment.
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11' # Use a modern Python version

    # Step 3: Install all the Python libraries your script needs.
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    # Step 4: Create the firebase-credentials.json file from the GitHub secret.
    - name: Create Firebase Credentials File
      run: echo "${{ secrets.FIREBASE_CREDENTIALS_JSON }}" > backend/firebase-credentials.json

      
    - name: Create Firebase Credentials File
      run: |
        cat <<EOF > backend/firebase-credentials.json
        ${{ secrets.FIREBASE_CREDENTIALS_JSON }}
        EOF

    # --- NEW DEBUGGING STEP ---
    # This step will print the environment variables to the log.
    # We will check if the GROQ_API_KEY is present and looks correct.
    - name: Debug Environment Variables
      run: |
        echo "GENERATION_API_URL is: ${{ env.GENERATION_API_URL }}"
        echo "GROQ_API_KEY is present: ${{ env.GROQ_API_KEY != '' }}"
        echo "First 5 chars of GROQ_API_KEY: ${{ env.GROQ_API_KEY_START }}"
      env:
        # We need to map the secrets to env variables for this step too
        GENERATION_API_URL: ${{ secrets.GENERATION_API_URL }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        # We create a new temporary variable with the start of the key for safe logging
        GROQ_API_KEY_START: ${{ secrets.GROQ_API_KEY_START }}
    # --- END OF DEBUGGING STEP ---

    # Step 5: Run your daily content worker script.
    # It has access to all the secrets we added as environment variables.
    - name: Run Daily Content Worker
      env:
        # Map your GitHub secrets to the environment variables the script expects.
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        FIREWORKS_API_KEY: ${{ secrets.FIREWORKS_API_KEY }}
        FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        GENERATION_API_URL: ${{ secrets.GENERATION_API_URL }}
      run: python backend/daily_content_worker.py