# .github/workflows/weekly_content_cluster_job.yml

name: Weekly Content Cluster Generation

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  build-and-run-script:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
      
    - name: Create Firebase Credentials File
      # --- FIX #1: Use the robust single-quoted version ---
      # This prevents the shell from mangling the JSON content.
      run: echo "${{ secrets.FIREBASE_CREDENTIALS_JSON }}" > backend/firebase-credentials.json

    - name: Debug Environment Variables
      run: |
        echo "GENERATION_API_URL is: ${{ env.GENERATION_API_URL }}"
        echo "GROQ_API_KEY is present: ${{ env.GROQ_API_KEY != '' }}"
        echo "First 5 chars of GROQ_API_KEY: ${{ env.GROQ_API_KEY_START }}"
      env:
        # We need to map the secrets to env variables for this step too
        GENERATION_API_URL: ${{ secrets.GENERATION_API_URL }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        # We create a new temporary variable with the start of the key for safe logging
        GROQ_API_KEY_START: ${{ secrets.GROQ_API_KEY_START }}
    # --- END OF DEBUGGING STEP ---

    - name: Run Weekly Content Worker
      env:
        # ... (all your env secrets are the same and correct)
      # --- FIX #2: Run the script from the root directory ---
      # This matches the working daily job and is much more reliable.
       DATABASE_URL: ${{ secrets.DATABASE_URL }}
       GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
       FIREWORKS_API_KEY: ${{ secrets.FIREWORKS_API_KEY }}
       FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
       GENERATION_API_URL: ${{ secrets.GENERATION_API_URL }}
      run: python backend/weekly_content_worker.py
    
    - name: Commit and push updated weekly plan
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add backend/weekly_plan.json
        git diff --staged --quiet || git commit -m "Update weekly content plan"
        git push